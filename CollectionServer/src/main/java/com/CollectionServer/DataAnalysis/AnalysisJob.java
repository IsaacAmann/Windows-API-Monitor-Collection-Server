package com.CollectionServer.DataAnalysis;

import jakarta.persistence.*;

import com.CollectionServer.DataPointRepository;

import java.util.Date;

import java.util.Map;
import java.util.HashMap;

@Entity
public class AnalysisJob 
{
	public enum JobStatus
	{
		SUBMITTED,
		RUNNING,
		COMPLETED,
		FAILED;
	}
	
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	public Integer Id;
	
	@Transient
	public AnalysisMethod analysisMethod;
	
	//Maps data point ID's to cluster ID's generated by the clustering algrorithm
	@ElementCollection
	public Map<Integer, Integer> clusters;
	
	//Map for storing parameters passed to the analysis method for later reference
	@ElementCollection
	public Map<String, String> parameters;
	
	@Transient
	public DataPointRepository dataPointRepository;
	
	public Date timeStarted;
	
	public Date timeFinished;
		
	public AnalysisMethod.AnalysisType analysisType;
	
	public JobStatus jobStatus;
	
	public AnalysisJob(AnalysisMethod analysisMethod, DataPointRepository dataPointRepository)
	{
		this.analysisMethod = analysisMethod;
		parameters = new HashMap<String, String>();
		analysisType = analysisMethod.analysisType;
		jobStatus = JobStatus.SUBMITTED;
		analysisMethod.parentJob = this;
		this.dataPointRepository = dataPointRepository;
	}
	
	public void startJob()
	{
		if(jobStatus == JobStatus.SUBMITTED)
		{
			//Start running analysisMethod
			analysisMethod.start();
			jobStatus = JobStatus.RUNNING;
			timeStarted = new Date();
		}
	}
}
